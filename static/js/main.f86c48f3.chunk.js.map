{"version":3,"sources":["images/whiteHeartIcon.svg","images/blackHeartIcon.svg","components/Heading/chef.svg","images/exploreIcon.svg","images/mealIcon.svg","images/drinkIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/shareIcon.svg","components/Recipes/RecipeCard/garfo.svg","components/Recipes/RecipeCard/beber.svg","components/DoneRecipeCard/garfo.svg","components/DoneRecipeCard/beber.svg","components/Heading/Heading.js","pages/Login/Login.js","components/Footer/Footer.js","components/HeaderSearchBar/searchButtonFunction.js","services/searchBarAPI.js","components/HeaderSearchBar/HeaderSearchBarContext.js","components/HeaderSearchBar/index.js","components/Header/index.js","pages/UserProfile/Profile.js","untils/ingredientsWithQuantity.js","untils/destructureObject.js","pages/RecipesInProgress/RecipeInProgressProvider.js","pages/DetailsPage/DetailsRecipePage/RecommendedCard.js","pages/DetailsPage/DetailsRecipePage/RecommendedContainerComponent.js","pages/DetailsPage/RecipeButtonControl.js","pages/DetailsPage/DetailsRecipePage/Ingredients.js","components/Share/ShareButton.js","pages/FoodMainPage/Context/FoodContext.js","components/Favorite/FavoriteButton.js","components/ContentHeader/ContentHeader.js","pages/DetailsPage/DetailsRecipePage/RecipeComponent.js","components/Loading/Loading.js","pages/DetailsPage/DetailsRecipePage/DetailsRecipesPage.js","services/theMealAPI.js","services/theCockTailAPI.js","pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent.js","pages/RecipesInProgress/RecipesInProgressPage/IngredientsCheckbox.js","pages/RecipesInProgress/RecipesInProgressPage/RecipeInProgressComponent.js","pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressPage.js","pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent.js","components/Categories/ListCategories.js","components/Recipes/RecipeCard/RecipeCard.js","components/Recipes/RecipeList/RecipeList.js","pages/FoodMainPage/Foods.js","pages/DrinkMainPage/Drinks.js","pages/FavoriteRecipes/FavoriteRecipes.js","pages/ExplorerPages/Explorer.js","pages/ExplorerPages/ExplorerDrinkOrFood.js","pages/ExplorerPages/ExplorerByIngredients.js","pages/ExplorerPages/ExplorerByOrigem.js","pages/ExplorerPages/NotFound.js","components/DoneRecipeCard/index.js","pages/DoneRecipes/DoneRecipesList.js","pages/DoneRecipes/index.js","Routes/Routes.js","pages/FoodMainPage/Context/FoodProvider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Heading","title","className","src","chef","alt","Login","useState","email","password","disabled","setDisabled","name","htmlFor","data-testid","onChange","e","value","target","input","test","currentState","handleEmail","type","length","handlePassword","to","onClick","localStorage","setItem","JSON","stringify","renderIconToRoute","route","icon","testid","Footer","drinkIcon","exploreIcon","mealIcon","search","ingredients","ingredient","urlFindRecipesByIngredient","fetch","then","response","json","ok","Promise","resolve","reject","urlFindRecipesByName","firstLetter","letter","urlFindByFirstLetter","pushRoute","history","data","meals","push","idMeal","drinks","idDrink","performSearch","setIsFetching","setData","searchParam","searchName","a","alert","searchButton","SearchBarContext","createContext","displayName","SearchBarProvider","children","isFetching","context","Provider","withRouter","location","state","setState","pathname","useContext","handleChange","radioInput","dataTestId","label","placeholder","Header","searchIcon","viewSearch","setViewSearch","profileIcon","iconSearch","Profile","setEmail","rote","setRote","useEffect","parse","getItem","clear","ingredientsWithQuantity","namesArray","arrayOfQuantity","quantityArray","reduce","acc","currentElement","index","destructureAPI","apiType","init","mid","end","englishType","ingredientsValues","Object","values","slice","ingredientsQuantity","category","strCategory","img","video","strYoutube","instructions","strInstructions","id","area","strArea","tags","strTags","alcoholic","strAlcoholic","RecipeInProgressContext","RecipeInProgressProvider","recipeData","setRecipeData","providerRecommended","setProviderRecommended","recipesInProgressObj","setRecipeDataFunc","setProviderRecommendedFunc","recommendedData","sixRecommended","map","recommended","RecommendedCard","props","useLocation","includes","width","defaultProps","undefined","RecommendedContainerComponent","key","RecipeButtonControl","some","recipe","Ingredients","quantity","ShareButton","path","copied","setCopied","navigator","clipboard","writeText","window","origin","setTimeout","shareIcon","foodContext","FavoriteButton","NotFavorited","setNotFavorited","whiteHeartIcon","srcIcon","setSrcIcon","setStorage","FoodContext","favorited","blackHeartIcon","handleFavorite","newRecipe","concat","alcoholicOrNot","image","recipeObject","addToLocalStorage","filter","element","removeLocalStorage","ContentHeader","RecipeComponent","url","height","Loading","React","Component","DetailsRecipesPage","renderControl","isLoading","errorMessage","fetchMeals","fetchCategoriesMeals","fetchCategoryMealsButton","fetchMealById","urlMealById","fetchAllMeals","fetchRandomMeal","fetchAreasList","fetchMealsByCountry","country","fetchIngredientsList","fetchDrinks","fetchCategoriesDrinks","fetchDrinkByCategoryButton","fetchDrinkById","urlDrinkById","fetchRandomDrink","fetchListDrinksIngredients","DetailsRecipeContent","setErrorMessage","setIsLoading","match","params","apiRequestSucceedMeal","apiRequestSucceedDrink","apiRequestFailure","message","apiRequestFunction","callback","recipeId","IngredientsCheckbox","textDecorationState","setTextDecorationState","checkState","setCheckState","finishButton","style","textDecoration","defaultChecked","riskIngredient","inProgress","newArr","inProgressRecipes","localStorageProgress","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","RecipeInProgressComponent","recipeObj","split","doneRecipes","doneDate","startedRecipe","finishingRecipe","RecipesInProgressPage","createLocalStorage","cocktails","RecipesInProgressContent","useParams","handleCategories","fetchCallBack","setCallBack","err","handleAllCategory","allCategories","ListCategories","strCategories","setMealsData","setDrinksData","dataBase","untils","setAllCategories","categoryType","console","log","filterByCategory","RecipeCard","favoriteds","redirect","setRedirect","renderThumb","Fragment","garfo","beber","renderCardInfo","renderSubtitleCard","recipeModal","renderFavoriteCategories","setFilteredRecipes","recipes","all","food","drink","keys","RecipeList","categories","setCategories","setFavoriteds","filteredRecipes","resp","Foods","get12Meals","mealsData","Drinks","get12Drinks","drinksData","FavoriteRecipe","setRecipes","storage","Explorar","fetchRandomRecipes","setRandomRecipe","randomRecipe","randomId","buttonFoodOrDrink","currentRoute","nextRoute","buttonTitle","buttonSuprise","ExplorerDrinkOrFoods","fetchIngredients","setIngredients","setImgUrl","setNewRoute","dataMeals","dataDrinks","ExplorerByIngredients","newRoute","imgUrl","ele","strIngredient","strIngredient1","renderCards","fetchCountryList","setCountryList","countryList","setMeals","option","ExplorerByArea","setOption","strMealThumb","strMeal","NotFound","DoneRecipeCard","renderTopInformantion","renderDate","tagName","renderTagName","renderCategories","DoneRecipeList","setDoneRecipes","DoneRecipes","DoneRecipesList","Routes","component","DrinkOrFoods","Explorer","exact","FavoriteRecipes","FoodProvider","setDataBase","handleMealsSuccess","handleDrinksSuccess","App","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f86c48f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/chef.b9ef5071.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.b9ef5071.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.a852f82b.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/garfo.8bab732c.svg\";","module.exports = __webpack_public_path__ + \"static/media/beber.3c35e11f.svg\";","module.exports = __webpack_public_path__ + \"static/media/garfo.8bab732c.svg\";","module.exports = __webpack_public_path__ + \"static/media/beber.3c35e11f.svg\";","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Heading.css';\nimport chef from './chef.svg';\n\nconst Heading = ({ title }) => (\n  <div className=\"heading-container\">\n    <h1 className=\"title\">{title}</h1>\n    <div>\n      <img className=\"personal-icon\" src={chef} alt=\"icone de um chef\" />\n    </div>\n  </div>\n);\n\nHeading.propTypes = { title: PropTypes.string.isRequired };\n\nexport default Heading;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Heading from '../../components/Heading/Heading';\nimport './Login.css';\nimport '../../App.css';\n\nconst Login = () => {\n  const [disabled, setDisabled] = useState({ email: '', password: '' });\n  const { email, password } = disabled;\n\n  const handleEmail = ({ target: { value } }) => {\n    const regExr = /^[a-zA-Z0-9]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/;\n    const input = regExr.test(value) ? value : '';\n    return setDisabled((currentState) => ({ ...currentState, email: input }));\n  };\n\n  const handlePassword = ({ target: { value } }) => {\n    const input = value.length > 6 ? value : '';\n    return setDisabled((currentState) => ({ ...currentState, password: input }));\n  };\n\n  const handleSubmit = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n  };\n\n  return (\n    <section className=\"container\">\n      <div className=\"form-container b-shadow\" name=\"login\">\n        <div className=\"form-background\" />\n        <Heading title=\"Welcome\" />\n        <label htmlFor=\"email\">E-mail</label>\n        <input data-testid=\"email-input\" onChange={(e) => handleEmail(e)} type=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input data-testid=\"password-input\" onChange={(e) => handlePassword(e)} type=\"password\" />\n        <Link to=\"/comidas\">\n          <button\n            className=\"submit-btn\"\n            data-testid=\"login-submit-btn\"\n            onClick={() => handleSubmit()}\n            disabled={email === '' || password === ''}\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport exploreIcon from '../../images/exploreIcon.svg';\nimport mealIcon from '../../images/mealIcon.svg';\nimport drinkIcon from '../../images/drinkIcon.svg';\nimport './Footer.css';\n\nfunction renderIconToRoute(route, icon, testid) {\n  return (\n    <Link to={`/${route}`}>\n      <div>\n        <img\n          className=\"icon-footer\"\n          src={icon}\n          alt={icon}\n          data-testid={`${testid}-bottom-btn`}\n        />\n      </div>\n    </Link>\n  );\n}\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\" data-testid=\"footer\">\n      <div className=\"footer-container\">\n        {renderIconToRoute('bebidas', drinkIcon, 'drinks')}\n        {renderIconToRoute('explorar', exploreIcon, 'explore')}\n        {renderIconToRoute('comidas', mealIcon, 'food')}\n      </div>\n    </div>\n  );\n}\n","import { fetchRecipesByIngredient, fetchRecipesByName, fetchRecipesByFirstLetter } from '../../services/searchBarAPI';\n\nconst search = {\n  ingredients: fetchRecipesByIngredient,\n  name: fetchRecipesByName,\n  firstLetter: fetchRecipesByFirstLetter,\n};\n\nconst pushRoute = (history, type, data) => {\n  if (type === 'meal' && data.meals.length === 1) {\n    history.push(`/comidas/${data.meals[0].idMeal}`);\n  }\n  if (type === 'cocktail' && data.drinks.length === 1) {\n    history.push(`/bebidas/${data.drinks[0].idDrink}`);\n  }\n};\n\nconst performSearch = async (\n  history,\n  type,\n  setIsFetching,\n  setData,\n  searchParam,\n  searchName,\n) => {\n  const data = await search[searchParam](searchName, type);\n  if (data.meals || data.drinks) {\n    setData(data.meals || data.drinks);\n    setIsFetching(false);\n  } else {\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n  pushRoute(history, type, data);\n  return false;\n};\n\nconst searchButton = async (\n    history,\n    type,\n    setIsFetching,\n    setData,\n    searchParam,\n    searchName,\n  ) => {\n  if (searchParam === 'firstLetter' && searchName.length !== 1) {\n    alert('Sua busca deve conter somente 1 (um) caracter');\n  } else {\n    performSearch(\n      history,\n      type,\n      setIsFetching,\n      setData,\n      searchParam,\n      searchName,\n    );\n  }\n};\n\nexport default searchButton;\n","export const fetchRecipesByIngredient = (ingredient, type) => {\n  const urlFindRecipesByIngredient = `https://www.the${type}db.com/api/json/v1/1/filter.php?i=${ingredient}`;\n  return fetch(urlFindRecipesByIngredient).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nexport const fetchRecipesByName = (name, type) => {\n  const urlFindRecipesByName = `https://www.the${type}db.com/api/json/v1/1/search.php?s=${name}`;\n  return fetch(urlFindRecipesByName).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nexport const fetchRecipesByFirstLetter = (letter, type) => {\n  const urlFindByFirstLetter = `https://www.the${type}db.com/api/json/v1/1/search.php?f=${letter}`;\n  return fetch(urlFindByFirstLetter).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n","\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBarContext = createContext(null);\n\nSearchBarContext.displayName = 'SearchBarContext';\n\nconst SearchBarProvider = ({ children }) => {\n  const [isFetching, setIsFetching] = useState(true);\n  const [data, setData] = useState([]);\n\n  const context = { isFetching, setIsFetching, data, setData };\n\n  return <SearchBarContext.Provider value={context}>{children}</SearchBarContext.Provider>;\n};\n\nexport default SearchBarProvider;\n\nSearchBarProvider.propTypes = { children: PropTypes.node.isRequired };\n","import React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport searchButton from './searchButtonFunction';\nimport { SearchBarContext } from './HeaderSearchBarContext';\n\nconst HeaderSearchBar = ({ history, location }) => {\n  const [state, setState] = useState({\n    searchParam: 'name',\n    searchName: '',\n  });\n\n  const type = location.pathname === '/comidas' ? 'meal' : 'cocktail';\n\n  const { setIsFetching, setData } = useContext(SearchBarContext);\n\n  const { searchParam, searchName } = state;\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const radioInput = (htmlFor, value, dataTestId, label) => (\n    <label htmlFor={htmlFor} className=\"search-label\">\n      <input\n        type=\"radio\"\n        name=\"searchParam\"\n        value={value}\n        data-testid={dataTestId}\n        onClick={(e) => handleChange(e)}\n      />\n      {label}\n    </label>\n  );\n\n\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        name=\"searchName\"\n        placeholder=\"Buscar Receita\"\n        data-testid=\"search-input\"\n        className=\"search-input\"\n        onChange={(e) => handleChange(e)}\n      />\n      <div className=\"radio-container\">\n        {radioInput('ingredient', 'ingredients', 'ingredient-search-radio', 'Ingredientes')}\n        {radioInput('name', 'name', 'name-search-radio', 'Nome')}\n        {radioInput('firstLetter', 'firstLetter', 'first-letter-search-radio', 'Primeira letra')}\n      </div>\n      <button\n        type=\"button\"\n        name=\"searchParam\"\n        data-testid=\"exec-search-btn\"\n        className=\"search-button\"\n        onClick={() => searchButton(\n          history,\n          type,\n          setIsFetching,\n          setData,\n          searchParam,\n          searchName,\n        )}\n      >\n        Buscar\n      </button>\n    </div>\n  );\n};\n\nexport default withRouter(HeaderSearchBar);\n\nHeaderSearchBar.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport HeaderSearchBar from '../HeaderSearchBar';\nimport './style.css';\n// import woman from './mulher.svg';\n// import man from './pessoa.svg';\nimport profileIcon from '../../images/profileIcon.svg';\nimport iconSearch from '../../images/searchIcon.svg';\n\n\nconst Header = ({ title, searchIcon }) => {\n  const [viewSearch, setViewSearch] = useState(false);\n\n  return (\n    <div >\n      <header className=\"header-container\">\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={profileIcon}\n            alt=\"icone de perfil\"\n            className=\"header-icon\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\" className=\"header-title\">{title}</h1>\n        {searchIcon && (\n          <input\n            type=\"image\"\n            src={iconSearch}\n            data-testid=\"search-top-btn\"\n            alt=\"icone de  busca\"\n            onClick={() => setViewSearch(!viewSearch)}\n            className=\"header-icon-search\"\n          />\n        )}\n        {!searchIcon && (<p />)}\n      </header>\n      {viewSearch && <HeaderSearchBar />}\n    </div>\n  );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  searchIcon: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/index';\nimport './Profile.css';\nimport '../../App.css';\n\nconst Profile = () => {\n  const [email, setEmail] = useState('');\n  const [rote, setRote] = useState('');\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('user'))) {\n      setEmail(JSON.parse(localStorage.getItem('user')).email);\n    }\n  }, [JSON.parse(localStorage.getItem('user'))]);\n\n  const handleExit = () => {\n    localStorage.clear();\n    setRote('/');\n  };\n\n  if (rote !== '') return <Redirect to={`${rote}`} />;\n  return (\n    <div className=\"profile b-shadow\">\n      <Header title=\"Perfil\" searchIcon={false} />\n      <div className=\"align-container\">\n        <label htmlFor=\"email\">E-mail</label>\n        <span data-testid=\"profile-email\">{email}</span>\n        <button\n          className=\"profile-btn\"\n          onClick={() => setRote('/receitas-feitas')} data-testid=\"profile-done-btn\"\n        >\n          Receitas Feitas\n        </button>\n        <button\n          className=\"profile-btn\"\n          onClick={() => setRote('/receitas-favoritas')}\n          data-testid=\"profile-favorite-btn\"\n        >\n          Receitas Favoritas\n        </button>\n        <button\n          className=\"profile-btn\"\n          onClick={() => handleExit()} data-testid=\"profile-logout-btn\"\n        >\n          Sair\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Profile;\n","\nconst ingredientsWithQuantity = (namesArray, arrayOfQuantity) => {\n  const quantityArray = [...arrayOfQuantity];\n  return namesArray.reduce((acc, currentElement, index) => {\n    if (currentElement !== '' && currentElement !== null) {\n      quantityArray[index] = quantityArray[index] || 'A seu gosto';\n      acc.push([currentElement, quantityArray[index]]);\n    }\n    return acc;\n  }, []);\n};\n\n\nexport default ingredientsWithQuantity;\n","import ingredientsWithQuantity from '../untils/ingredientsWithQuantity';\n\nconst destructureAPI = (data) => {\n  let apiType = 'Drink';\n  let init = 21;\n  let mid = 36;\n  let end = 51;\n  let type = 'bebidas';\n  let englishType = 'cocktails';\n  if (data.idMeal) {\n    apiType = 'Meal';\n    init = 9;\n    mid = 29;\n    end = 49;\n    type = 'comidas';\n    englishType = 'meals';\n  }\n\n  const ingredientsValues = Object.values(data).slice(init, mid);\n  const ingredientsQuantity = Object.values(data).slice(mid, end);\n\n  const {\n    [`str${apiType}`]: name, strCategory: category, [`str${apiType}Thumb`]: img, strYoutube: video,\n    strInstructions: instructions, [`id${apiType}`]: id, strArea: area, strTags: tags, strAlcoholic: alcoholic,\n  } = data;\n\n  const dataObj = {\n    name,\n    category,\n    alcoholic,\n    img,\n    video,\n    instructions,\n    id,\n    ingredients: ingredientsWithQuantity(ingredientsValues, ingredientsQuantity),\n    area,\n    init,\n    mid,\n    end,\n    type,\n    englishType,\n    tags,\n  };\n\n  return dataObj;\n};\n\nexport default destructureAPI;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport destructureAPI from '../../untils/destructureObject';\n\nexport const RecipeInProgressContext = createContext();\n\nexport const RecipeInProgressProvider = ({ children }) => {\n  const [recipeData, setRecipeData] = useState({});\n  const [providerRecommended, setProviderRecommended] = useState([]);\n\n  const setRecipeDataFunc = (data) => setRecipeData(destructureAPI(data));\n  const setProviderRecommendedFunc = (recommendedData) => {\n    const sixRecommended = recommendedData\n      .map((recommended) => destructureAPI(recommended)).slice(0, 6);\n    setProviderRecommended(sixRecommended);\n  };\n\n  const recipesInProgressObj = {\n    recipeData,\n    setRecipeDataFunc,\n    providerRecommended,\n    setProviderRecommendedFunc,\n  };\n\n  return (\n    <RecipeInProgressContext.Provider value={recipesInProgressObj}>\n      {children}\n    </RecipeInProgressContext.Provider>\n  );\n};\n\nRecipeInProgressProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport './RecommendedCard.css';\n\nconst RecommendedCard = (props) => {\n  const { name, category, img, id, alcoholic } = props.recommended;\n  const { index } = props;\n  const { pathname } = useLocation();\n\n  const changePageURL = () => {\n    if (pathname.includes('/bebidas')) return 'comidas';\n    return 'bebidas';\n  };\n\n  return (\n    <div data-testid={`${index}-recomendation-card`} className=\"recommended-card\">\n      <Link to={`/${changePageURL()}/${id}`}>\n        <div>\n          <img src={img} alt={name} width=\"180px\" />\n          <h5>{alcoholic || category }</h5>\n          <h4 data-testid={`${index}-recomendation-title`}>{name}</h4>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default RecommendedCard;\n\nRecommendedCard.propTypes = {\n  index: PropTypes.number,\n  recommended: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nRecommendedCard.defaultProps = {\n  index: undefined,\n};\n","import React, { useContext } from 'react';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport RecommendedCard from './RecommendedCard';\nimport './RecommendedContainerComponent.css';\n\nconst RecommendedContainerComponent = () => {\n  const { providerRecommended } = useContext(RecipeInProgressContext);\n\n  return (\n    <div>\n      <h2>Recomendadas</h2>\n      <div className=\"recommended-container\">\n        {providerRecommended.map((recommended, index) =>\n          <RecommendedCard\n            key={recommended.id}\n            recommended={recommended}\n            index={index}\n          />,\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendedContainerComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipesInProgress/RecipeInProgressProvider';\nimport './RecipeButtonControl.css';\n\nconst RecipeButtonControl = () => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { id, type, englishType } = recipeData;\n\n  if (\n    JSON.parse(localStorage.getItem('doneRecipes')) &&\n    JSON.parse(localStorage.getItem('doneRecipes')).some((recipe) => recipe.id === id)\n  ) return <div>Receita Feita!</div>;\n  if (\n    englishType &&\n    JSON.parse(localStorage.getItem('inProgressRecipes')) &&\n    JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType][id]\n    ) {\n    return (\n      <div>\n        <Link data-testid=\"start-recipe-btn\" to={`/${type}/${id}/in-progress`}>\n          <button type=\"button\">\n            Continuar Receita\n          </button>\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Link className=\"recipe-btn\" data-testid=\"start-recipe-btn\" to={`/${type}/${id}/in-progress`}>\n        <button type=\"button\">\n          Iniciar Receita\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default RecipeButtonControl;\n\n// RecipeButtonControl.propTypes = {\n//   recipeData: PropTypes.objectOf(PropTypes.any).isRequired,\n// };\n\n// RecipeButtonControl.defaultProps = {\n\n// };\n","import React, { useContext } from 'react';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\n\nconst Ingredients = () => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { ingredients = [] } = recipeData;\n\n  return (\n    <div>\n      <h2>Ingredients</h2>\n      <ul>\n        {ingredients.map(([ingredient, quantity], index) =>\n          (<li\n            data-testid={`${index}-ingredient-name-and-measure`}\n            key={ingredient + quantity}\n          >\n            {ingredient} - {quantity}\n          </li>))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../../images/shareIcon.svg';\nimport './ShareButton.css';\nimport '../Favorite/FavoriteButton.css';\n\nconst ShareButton = ({ index, path }) => {\n  const [copied, setCopied] = useState(false);\n  const handleShareButton = () => {\n    navigator.clipboard.writeText(`${window.location.origin}${path}`);\n    setTimeout(() => setCopied(false), 5000);\n    setCopied(true);\n  };\n  return (\n    <button className=\"transparentBtn\" onClick={() => handleShareButton()}>\n      <img\n        data-testid={typeof (index) === 'number' ? `${index}-horizontal-share-btn` : 'share-btn'}\n        src={shareIcon} alt=\"Icone para compartilhar receita\"\n      />\n      {copied && <span className=\"copied-link\">Link copiado!</span>}\n    </button>\n  );\n};\n\nShareButton.defaultProps = {\n  index: undefined,\n};\n\nShareButton.propTypes = {\n  index: PropTypes.number,\n  path: PropTypes.string.isRequired,\n};\n\nexport default ShareButton;\n","import { createContext } from 'react';\n\nconst foodContext = createContext();\n\nexport default foodContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\nimport './FavoriteButton.css';\n\nconst recipeObject = (recipe, type) => {\n  if (type === 'comidas') {\n    return {\n      id: recipe.id,\n      type: 'comida',\n      area: recipe.area,\n      category: recipe.category,\n      alcoholicOrNot: '',\n      name: recipe.name,\n      image: recipe.img,\n    };\n  }\n  return {\n    id: recipe.id,\n    type: 'bebida',\n    area: '',\n    category: recipe.category,\n    alcoholicOrNot: recipe.alcoholic,\n    name: recipe.name,\n    image: recipe.img,\n  };\n};\n\nconst FavoriteButton = ({ recipe, index }) => {\n  const [NotFavorited, setNotFavorited] = useState(true);\n  const [srcIcon, setSrcIcon] = useState(whiteHeartIcon);\n  const { setStorage } = useContext(FoodContext);\n  useEffect(() => {\n    if (!localStorage.getItem('favoriteRecipes')) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    } else {\n      const favoriteds = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      if (favoriteds.some((favorited) => favorited.id === recipe.id)) {\n        setNotFavorited(false);\n        setSrcIcon(blackHeartIcon);\n      }\n    }\n  }, []);\n  const addToLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.concat(recipeObject(recipe, recipe.type));\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(blackHeartIcon);\n    return null;\n  };\n  const removeLocalStorage = () => {\n    const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newRecipe = recipes.filter((element) => element.id !== recipe.id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newRecipe));\n    setSrcIcon(whiteHeartIcon);\n    return null;\n  };\n  const handleFavorite = () => {\n    if (NotFavorited) {\n      addToLocalStorage();\n    } else {\n      removeLocalStorage();\n    }\n    setStorage(() => JSON.parse(localStorage.getItem('favoriteRecipes')));\n    return setNotFavorited((currentState) => !currentState);\n  };\n  return (\n    <button className=\"transparentBtn\" onClick={() => handleFavorite()}>\n      <img\n        data-testid={\n          typeof (index) === 'number' ? `${index}-horizontal-favorite-btn` : 'favorite-btn'\n        }\n        src={srcIcon} alt=\"Icone para favoritar receita\"\n      />\n    </button>\n  );\n};\n\nFavoriteButton.defaultProps = {\n  index: undefined,\n};\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number,\n};\n\nexport default FavoriteButton;\n","import React, { useContext } from 'react';\nimport ShareButton from '../Share/ShareButton';\nimport FavoriteButton from '../Favorite/FavoriteButton';\nimport { RecipeInProgressContext } from '../../pages/RecipesInProgress/RecipeInProgressProvider';\nimport './ContentHeader.css';\n\nconst ContentHeader = () => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { name, category, alcoholic = '', img, type, id } = recipeData;\n  return (\n    <div>\n      <img className=\"food-img\" data-testid=\"recipe-photo\" src={img} alt={name} width=\"20%\" />\n      <div className=\"details-meals-header\">\n        <div className=\"details-meals-titles\">\n          <h1 data-testid=\"recipe-title\">{name}</h1>\n          <p data-testid=\"recipe-category\">{alcoholic || category}</p>\n        </div>\n        <div className=\"fav-share-button\">\n          <ShareButton path={`/${type}/${id}`} />\n          <FavoriteButton recipe={recipeData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentHeader;\n","import React, { useContext } from 'react';\nimport ReactPlayer from 'react-player';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport RecommendedContainerComponent from './RecommendedContainerComponent';\nimport RecipeButtonControl from '../RecipeButtonControl';\nimport Ingredients from './Ingredients';\nimport './RecipeComponent.css';\nimport ContentHeader from '../../../components/ContentHeader/ContentHeader';\n\nconst RecipeComponent = () => {\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { instructions } = recipeData;\n\n  return (\n    <div className=\"details-meals-container\">\n      <div className=\"details-meals-content\">\n        <ContentHeader />\n        <Ingredients />\n        <h2>Instructions</h2>\n        <div className=\"instructions-container\">\n          <p data-testid=\"instructions\">{instructions}</p>\n        </div>\n        {recipeData.video ?\n          <div>\n            <h2>Video</h2>\n            <div data-testid=\"video\">\n              <ReactPlayer url={recipeData.video} height={200} width={360} />\n            </div>\n          </div>\n          :\n          null\n        }\n        <RecommendedContainerComponent />\n        <RecipeButtonControl />\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeComponent;\n","import React from 'react';\nimport './Loading.css';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\" />\n        <div className=\"double-bounce2\" />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeComponent from './RecipeComponent';\nimport Loading from '../../../components/Loading/Loading';\n\nconst DetailsRecipesPage = (props) => {\n  const { isLoading, errorMessage } = props.renderControl;\n\n  if (isLoading) return <Loading />;\n  if (errorMessage !== '') return <span>Algum Error Ocorreu</span>;\n  return <div><RecipeComponent /></div>;\n};\n\nexport default DetailsRecipesPage;\n\nDetailsRecipesPage.propTypes = {\n  renderControl: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","export const fetchMeals = () => {\n  const url12Meals = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  return fetch(url12Meals).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlCategoriesMeals = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nexport const fetchCategoriesMeals = () => (\n  fetch(urlCategoriesMeals).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\n// Buscar Meals por categoria específica\n\nconst urlCategoryMealsButton = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\nexport const fetchCategoryMealsButton = (category) => (\n  fetch(`${urlCategoryMealsButton}${category}`).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nexport const fetchMealById = (id) => {\n  const urlMealById = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n  return fetch(urlMealById).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlAllMeal = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nexport const fetchAllMeals = async () => {\n  const response = await fetch(`${urlAllMeal}`);\n  return response.json();\n};\n\nconst urlRandomMeal = 'https://www.themealdb.com/api/json/v1/1/random.php';\nexport const fetchRandomMeal = async () => {\n  const response = await fetch(`${urlRandomMeal}`);\n  return response.json();\n};\n\nconst urlAreasList = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nexport const fetchAreasList = async () => {\n  const response = await fetch(`${urlAreasList}`);\n  return response.json();\n};\n\nconst urlFilterByArea = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\nexport const fetchMealsByCountry = async (country) => {\n  const response = await fetch(`${urlFilterByArea}${country}`);\n  return response.json();\n};\n\nconst urlListMealsIngredients = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nexport const fetchIngredientsList = async () => {\n  const response = await fetch(urlListMealsIngredients);\n  return response.json();\n};\n\nexport const fetchMealsByIngredients = (ingredient) => {\n  const urlFindMealsByIngredients = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`;\n  return fetch(urlFindMealsByIngredients).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nexport const fetchMealsByName = (name) => {\n  const urlFindMealsByName = `https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`;\n  return fetch(urlFindMealsByName).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nexport const fetchMealsByFirstLetter = (letter) => {\n  const urlFindByFirstLetter = `https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`;\n  return fetch(urlFindByFirstLetter).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n","export const fetchDrinks = () => {\n  const url12Drinks = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n  return fetch(url12Drinks).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlCategoriesDrinks = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\nexport const fetchCategoriesDrinks = () => (\n  fetch(urlCategoriesDrinks).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nconst urlCategoryDrinksButton = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\nexport const fetchDrinkByCategoryButton = (category) => (\n  fetch(`${urlCategoryDrinksButton}${category}`).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ))\n);\n\nexport const fetchDrinkById = (id) => {\n  const urlDrinkById = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n  return fetch(urlDrinkById).then((response) => (\n    response.json()\n      .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n  ));\n};\n\nconst urlRandomDrink = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nexport const fetchRandomDrink = async () => {\n  const response = await fetch(`${urlRandomDrink}`);\n  return response.json();\n};\n\nconst urlListDrinksIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nexport const fetchListDrinksIngredients = async () => {\n  const response = await fetch(urlListDrinksIngredients);\n  return response.json();\n};\n\nconst urlFindDrinkByIngredients = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\nexport const fetchDrinksByIngredient = (ingredient) => (\n  fetch(`${urlFindDrinkByIngredients}${ingredient}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n\nconst urlFindDrinksByName = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nexport const fetchDrinksByName = (name) => (\n  fetch(`${urlFindDrinksByName}${name}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n\nconst urlFindByFirstLetter = 'https://www.themealdb.com/api/json/v1/1/search.php?f=';\nexport const fetchDrinksByFirstLetter = (letter) => (\n  fetch(`${urlFindByFirstLetter}${letter}`)\n    .then((response) => response.json())\n    .then((json) => (Promise.ok ? Promise.resolve(json) : Promise.reject(json)))\n);\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { RecipeInProgressContext } from '../../RecipesInProgress/RecipeInProgressProvider';\nimport DetailsRecipesPage from './DetailsRecipesPage';\nimport { fetchMealById, fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinkById, fetchDrinks } from '../../../services/theCockTailAPI';\n\nconst DetailsRecipeContent = (props) => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { setRecipeDataFunc, setProviderRecommendedFunc } = useContext(RecipeInProgressContext);\n\n  const { match: { params: { id } }, location: { pathname } } = props;\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    if (!pathname.includes('/comidas')) return setProviderRecommendedFunc(meals);\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    if (!pathname.includes('/bebidas')) return setProviderRecommendedFunc(drinks);\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId = '') => {\n      setIsLoading(true);\n      if (callback === fetchMealById || callback === fetchMeals) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n\n    if (pathname.includes('/comidas')) {\n      apiRequestFunction(fetchMealById, id);\n      apiRequestFunction(fetchDrinks);\n    } else {\n      apiRequestFunction(fetchDrinkById, id);\n      apiRequestFunction(fetchMeals);\n    }\n  }, [pathname]);\n\n  return <div><DetailsRecipesPage renderControl={{ isLoading, errorMessage }} /></div>;\n};\n\nexport default DetailsRecipeContent;\n\nDetailsRecipeContent.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst riskIngredient = (textDecorationState, setCheckState, setTextDecorationState) => {\n  if (textDecorationState === 'line-through') {\n    setCheckState(false);\n    return setTextDecorationState('');\n  }\n  setCheckState(true);\n  return setTextDecorationState('line-through');\n};\n\nconst localStorageProgress = (englishType, id, index) => {\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (inProgress[englishType][id].some((e) => e === index)) {\n    const newArr = [...inProgress[englishType][id]].filter((e) => e !== index);\n    const inProgressRecipes = {\n      ...inProgress,\n      [englishType]: { ...inProgress[englishType], [id]: newArr },\n    };\n    return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n  const inProgressRecipes = {\n    ...inProgress,\n    [englishType]: { ...inProgress[englishType], [id]: [...inProgress[englishType][id], index] },\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst IngredientsCheckbox = (props) => {\n  const [textDecorationState, setTextDecorationState] = useState('');\n  const [checkState, setCheckState] = useState(false);\n  const { ingredient, index, quantity, id, finishButton, englishType } = props;\n  useEffect(() => {\n    if (\n        JSON.parse(localStorage.getItem('inProgressRecipes'))\n        && JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType][id]\n          .some((e) => e === index)\n    ) {\n      setCheckState(true);\n      finishButton(englishType, id, index);\n      setTextDecorationState('line-through');\n    }\n  }, []);\n\n  return (\n    <div data-testid={`${index}-ingredient-step`}>\n      <label style={{ textDecoration: textDecorationState }} htmlFor={ingredient}>\n        <input\n          type=\"checkbox\"\n          defaultChecked={checkState}\n          onChange={() => {\n            riskIngredient(textDecorationState, setCheckState, setTextDecorationState);\n            localStorageProgress(englishType, id, index);\n            finishButton();\n          }}\n          id={ingredient}\n        />\n        {ingredient} - {quantity}\n      </label>\n    </div>\n  );\n};\n\nexport default IngredientsCheckbox;\n\nIngredientsCheckbox.propTypes = {\n  ingredient: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  quantity: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  finishButton: PropTypes.func.isRequired,\n  englishType: PropTypes.string.isRequired,\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport IngredientsCheckbox from './IngredientsCheckbox';\nimport ContentHeader from '../../../components/ContentHeader/ContentHeader';\nimport './RecipeInProgressComponent.css';\n\nlet today = new Date();\nconst dd = String(today.getDate()).padStart(2, '0');\nconst mm = String(today.getMonth() + 1).padStart(2, '0');\nconst yyyy = today.getFullYear();\ntoday = `${dd} / ${mm} / ${yyyy}`;\n\nconst finishingRecipe = (recipeObj) => {\n  const { id, name, area, category, alcoholic = '', img, type } = recipeObj;\n  let { tags = '' } = recipeObj;\n\n  if (tags !== null && tags.includes(',')) {\n    tags = tags.split(',');\n  } else {\n    tags = [tags];\n  }\n\n  const doneRecipes = {\n    id, type, area, category, alcoholicOrNot: alcoholic, name, image: img, doneDate: today, tags,\n  };\n  const startedRecipe = JSON.parse(localStorage.getItem('doneRecipes'));\n  if (!startedRecipe) return localStorage.setItem('doneRecipes', JSON.stringify([doneRecipes]));\n  return localStorage.setItem('doneRecipes', JSON.stringify([...startedRecipe, doneRecipes]));\n};\n\nconst RecipeInProgressComponent = () => {\n  const [disabled, setDisabled] = useState(true);\n  const { recipeData } = useContext(RecipeInProgressContext);\n  const { instructions, ingredients = [], type, id, englishType } = recipeData;\n  const finishButton = () => {\n    const inProgressType = JSON.parse(localStorage.getItem('inProgressRecipes'))[englishType];\n    if (inProgressType[id].length === ingredients.length) return setDisabled(false);\n    return setDisabled(true);\n  };\n  return (\n    <div className=\"details-meals-container\">\n      <div className=\"details-meals-content\">\n        <ContentHeader />\n        <h2>Ingredients</h2>\n        {ingredients.map(([ingredient, quantity], index) =>\n          <IngredientsCheckbox\n            key={ingredient + quantity}\n            ingredient={ingredient}\n            quantity={quantity}\n            type={type}\n            englishType={englishType}\n            index={index}\n            id={id}\n            finishButton={finishButton}\n          />,\n        )}\n        <h2>Instructions</h2>\n        <p className=\"instructions-container\" data-testid=\"instructions\">{instructions}</p>\n        <Link to=\"/receitas-feitas\">\n          <button\n            data-testid=\"finish-recipe-btn\"\n            type=\"button\"\n            disabled={disabled}\n            onClick={() => finishingRecipe(recipeData)}\n          >\n              Finalizar Receita\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeInProgressComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../../../components/Loading/Loading';\nimport RecipeInProgressComponent from './RecipeInProgressComponent';\n\nconst RecipesInProgressPage = (props) => {\n  const { isLoading, errorMessage } = props.renderControl;\n\n  if (isLoading) return <Loading />;\n  if (errorMessage !== '') return <span>Algum Error Ocorreu</span>;\n  return <div><RecipeInProgressComponent /></div>;\n};\n\nexport default RecipesInProgressPage;\n\nRecipesInProgressPage.propTypes = {\n  renderControl: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { RecipeInProgressContext } from '../RecipeInProgressProvider';\nimport { fetchMealById } from '../../../services/theMealAPI';\nimport { fetchDrinkById } from '../../../services/theCockTailAPI';\nimport RecipesInProgressPage from './RecipesInProgressPage';\n\nconst createLocalStorage = (id, type) => {\n  if (!JSON.parse(localStorage.getItem('inProgressRecipes'))) {\n    const inProgressRecipes = { cocktails: {}, meals: {} };\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }\n  const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const inProgressRecipes = {\n    ...inProgress,\n    [type]: {\n      [id]: [],\n      ...inProgress[type],\n    },\n  };\n  return localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n};\n\nconst RecipesInProgressContent = () => {\n  const { setRecipeDataFunc } = useContext(RecipeInProgressContext);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { pathname } = useLocation();\n  const { id } = useParams();\n\n  const apiRequestSucceedMeal = ({ meals }) => {\n    setRecipeDataFunc(meals[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestSucceedDrink = ({ drinks }) => {\n    setRecipeDataFunc(drinks[0]);\n    return setIsLoading(false);\n  };\n\n  const apiRequestFailure = ({ message }) => {\n    setErrorMessage(message);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    const apiRequestFunction = (callback, recipeId) => {\n      setIsLoading(true);\n      if (callback === fetchMealById) {\n        return callback(recipeId).then(apiRequestSucceedMeal, apiRequestFailure);\n      }\n      return callback(recipeId).then(apiRequestSucceedDrink, apiRequestFailure);\n    };\n    if (pathname.includes('/comidas')) {\n      createLocalStorage(id, 'meals');\n      apiRequestFunction(fetchMealById, id);\n    } else {\n      createLocalStorage(id, 'cocktails');\n      apiRequestFunction(fetchDrinkById, id);\n    }\n  }, [pathname]);\n\n  return (\n    <div>\n      <RecipesInProgressPage renderControl={{ isLoading, errorMessage }} />\n    </div>\n  );\n};\n\nexport default RecipesInProgressContent;\n\n// RecipesInProgressContent.propTypes = {\n\n// };\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\nimport { fetchDrinkByCategoryButton } from '../../services/theCockTailAPI';\nimport { fetchCategoryMealsButton } from '../../services/theMealAPI';\nimport './ListCategories.css';\n\nconst handleCategories = (category, fetchCallBack, setCallBack) => {\n  fetchCallBack(category)\n    .then((response) => setCallBack(Object.values(response)[0]), (err) => err);\n};\n\nconst handleAllCategory = (callback, data, category, allCategories) => {\n  if (allCategories === category || category === 'All') {\n    callback(data);\n    return true;\n  }\n  return false;\n};\n\nconst filterByCategory = (category, categoryType, untils) => {\n  const { setMealsData, setDrinksData, allCategories, setAllCategories, drinks, meals } = untils;\n  if (categoryType === 'drink') {\n    if (handleAllCategory(setDrinksData, drinks, category, allCategories.category)) {\n      return setAllCategories('');\n    }\n    setAllCategories({ category });\n    console.log(category, allCategories.category);\n    handleCategories(category, fetchDrinkByCategoryButton, setDrinksData);\n  }\n  if (handleAllCategory(setMealsData, meals, category, allCategories.category)) {\n    return setAllCategories('');\n  }\n  setAllCategories({ category });\n  handleCategories(category, fetchCategoryMealsButton, setMealsData);\n  return null;\n};\n\nconst ListCategories = ({ strCategories, type }) => {\n  const { setMealsData, setDrinksData, dataBase: { drinks, meals } } = useContext(FoodContext);\n  const [allCategories, setAllCategories] = useState({ category: '' });\n  const untils = {\n    setMealsData,\n    setDrinksData,\n    allCategories,\n    setAllCategories,\n    drinks,\n    meals,\n  };\n\n  return (\n    <div className=\"categories\">\n      {strCategories.slice(0, 6).map(({ strCategory }) => (\n        <button\n          className=\"categoryBtn\"\n          onClick={() => filterByCategory(strCategory, type, untils)}\n          data-testid={`${strCategory}-category-filter`} key={strCategory}\n        >\n          {`${strCategory}`}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nListCategories.propTypes = {\n  strCategories: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ListCategories;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../../components/Share/ShareButton';\nimport FavoriteButton from '../../../components/Favorite/FavoriteButton';\nimport './RecipeCard.css';\n\nimport garfo from './garfo.svg';\nimport beber from './beber.svg';\n\nconst renderThumb = (recipe, index, favoriteds, setRedirect) => {\n  const { img, name } = recipe;\n  return (\n    <div data-testid={`${index}-recipe-card`}>\n      <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n        <img\n          className=\"thumbnail\"\n          alt={`imagem de uma refeição: ${name}`}\n          data-testid={favoriteds ? `${index}-horizontal-image` : `${index}-card-img`}\n          src={img}\n        />\n      </button>\n    </div>\n  );\n};\n\nconst renderCardInfo = (recipe, index, favoriteds, setRedirect) => {\n  const { name, type, id } = recipe;\n  return (\n    <React.Fragment>\n      <div className=\"card-title\">\n        <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n          <span\n            data-testid={favoriteds ? `${index}-horizontal-name` : `${index}-card-name`}\n          >{name}\n          </span>\n        </button>\n        <img\n          className=\"recipe-icon\"src={type[0] === 'c' ? garfo : beber}\n          width=\"20px\" alt=\"icone de talheres\"\n        />\n      </div>\n      {favoriteds &&\n        <div>\n          <ShareButton index={index} path={`/${type}s/${id}`} />\n          <FavoriteButton recipe={recipe} index={index} />\n        </div>\n      }\n    </React.Fragment>\n  );\n};\n\nconst renderSubtitleCard = (recipe, index, favoriteds) => {\n  const { area, category, alcoholic } = recipe;\n  return (\n    <React.Fragment>\n      {favoriteds &&\n        <span\n          className=\"subtitle-card\"\n          data-testid={`${index}-horizontal-top-text`}\n        >\n          {recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic}\n        </span>\n      }\n    </React.Fragment>\n  );\n};\nconst RecipeCard = ({ recipe, index, favoriteds }) => {\n  const [redirect, setRedirect] = useState(false);\n  const { id, type } = recipe;\n  if (redirect) return <Redirect to={!favoriteds ? '#' : `/${type}s/${id}`} />;\n  return (\n    <Link className=\"card b-shadow\" to={favoriteds ? '#' : `/${type}/${id}`}>\n      {renderThumb(recipe, index, favoriteds, setRedirect)}\n      <div className=\"infoCard\">\n        {renderCardInfo(recipe, index, favoriteds, setRedirect)}\n        {renderSubtitleCard(recipe, index, favoriteds)}\n      </div>\n    </Link>\n  );\n};\n\nRecipeCard.defaultProps = {\n  favoriteds: undefined,\n};\n\nRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  favoriteds: PropTypes.string,\n};\n\n\nexport default RecipeCard;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesMeals } from '../../../services/theMealAPI';\nimport { fetchCategoriesDrinks } from '../../../services/theCockTailAPI';\nimport ListCategories from '../../Categories/ListCategories';\nimport RecipeCard from '../RecipeCard/RecipeCard';\nimport './RecipeList.css';\nimport '../../Categories/ListCategories.css';\nimport destructureAPI from '../../../untils/destructureObject';\n\nconst recipeModal = (recipe) => ({\n  ...recipe,\n  img: recipe.image,\n  alcoholic: recipe.alcoholicOrNot,\n});\n\nconst renderFavoriteCategories = (setFilteredRecipes, recipes) => {\n  const categories = [{ all: 'todos' }, { food: 'comida' }, { drink: 'bebida' }];\n  const filterRecipes = (value) => {\n    if (value === 'todos') return recipes;\n    return recipes.filter((recipe) => recipe.type === value);\n  };\n  return (\n    <div className=\"categories\">\n      {categories.map((category) => (\n        <button\n          className=\"categoryBtn\"\n          data-testid={`filter-by-${Object.keys(category)}-btn`}\n          onClick={() => setFilteredRecipes(filterRecipes(Object.values(category)[0]))}\n          key={Object.values(category)}\n        >\n          {Object.keys(category)}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst RecipeList = ({ recipes, type }) => {\n  const [categories, setCategories] = useState({ recipes: [] });\n  const [favoriteds, setFavoriteds] = useState(false);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  useEffect(() => {\n    if (type === 'favoriteds') {\n      setFavoriteds(true);\n    }\n    if (type === 'meal') {\n      fetchCategoriesMeals()\n        .then((resp) => setCategories({ recipes: resp.meals }), (resp) => resp);\n    }\n    if (type === 'drink') {\n      fetchCategoriesDrinks()\n      .then((resp) => setCategories({ recipes: resp.drinks }), (resp) => resp);\n    }\n  }, []);\n  useEffect(() => {\n    setFilteredRecipes(recipes);\n  }, [recipes]);\n\n  return (\n    <section>\n      {!favoriteds &&\n        <ListCategories\n          strCategories={[{ strCategory: 'All' }, ...categories.recipes]}\n          type={type}\n        />\n      }\n      {favoriteds && renderFavoriteCategories(setFilteredRecipes, recipes)}\n      <div className=\"foodList\">\n        {!favoriteds && recipes.slice(0, 12).map((recipe, index) => (\n          <RecipeCard\n            key={Object.values(recipe)[0]}\n            recipe={destructureAPI(recipe)}\n            index={index}\n          />\n        ))}\n        {favoriteds && filteredRecipes.map((recipe, index) => (\n          <RecipeCard\n            favoriteds=\"disabled-link\"\n            key={Object.values(recipe)[0]}\n            recipe={recipeModal(recipe)}\n            index={index}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecipeList;\n","import React, { useContext, useEffect } from 'react';\nimport FoodContext from './Context/FoodContext';\nimport RecipeList from '../../components/Recipes/RecipeList/RecipeList';\nimport Header from '../../components/Header';\nimport { SearchBarContext } from '../../components/HeaderSearchBar/HeaderSearchBarContext';\nimport Loading from '../../components/Loading/Loading';\nimport Footer from '../../components/Footer/Footer';\n\nconst Foods = () => {\n  const { data } = useContext(SearchBarContext);\n  const { get12Meals, mealsData } = useContext(FoodContext);\n  useEffect(() => {\n    get12Meals();\n  }, []);\n  if (mealsData.length === 0) return <Loading />;\n  return (\n    <div className=\"recipes-container\">\n      <Header title=\"Comidas\" searchIcon />\n      <RecipeList recipes={data.length ? data : mealsData} type=\"meal\" />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Foods;\n","import React, { useContext, useEffect } from 'react';\nimport FoodContext from '../FoodMainPage/Context/FoodContext';\nimport RecipeList from '../../components/Recipes/RecipeList/RecipeList';\nimport Header from '../../components/Header';\nimport { SearchBarContext } from '../../components/HeaderSearchBar/HeaderSearchBarContext';\nimport Footer from '../../components/Footer/Footer';\n\nconst Drinks = () => {\n  const { data } = useContext(SearchBarContext);\n  const { get12Drinks, drinksData } = useContext(FoodContext);\n  useEffect(() => {\n    get12Drinks();\n  }, []);\n  return (\n    <div>\n      <Header title=\"Bebidas\" searchIcon />\n      <RecipeList recipes={data.length ? data : drinksData} type=\"drink\" />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Drinks;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Header from '../../components/Header/index';\nimport RecipeList from '../../components/Recipes/RecipeList/RecipeList';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\n\nconst FavoriteRecipe = () => {\n  const [recipes, setRecipes] = useState([]);\n  const { storage } = useContext(FoodContext);\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('favoriteRecipes')) !== null) {\n      setRecipes(JSON.parse(localStorage.getItem('favoriteRecipes')));\n    }\n  }, [storage]);\n  useEffect(() => {\n    if (!JSON.parse(localStorage.getItem('favoriteRecipes'))) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(recipes));\n    }\n  }, []);\n  return (\n    <div>\n      <Header title=\"Receitas Favoritas\" searchIcon={false} />\n      <RecipeList recipes={recipes} type=\"favoriteds\" />\n    </div>\n  );\n};\nexport default FavoriteRecipe;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport './Explorer.css';\nimport Header from '../../components/Header/index';\n\nfunction Explorar() {\n  return (\n    <div>\n      <Header title=\"Explorar\" searchIcon={false} />\n      <div className=\"explorer-container\">\n        <Link to=\"/explorar/comidas\">\n          <button\n            data-testid=\"explore-food\"\n          >Explorar Comidas\n          </button>\n        </Link>\n        <Link to=\"/explorar/bebidas\">\n          <button\n            data-testid=\"explore-drinks\"\n          >Explorar Bebidas\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explorar;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Footer from '../../components/Footer/Footer';\nimport './Explorer.css';\nimport Header from '../../components/Header/index';\nimport { fetchRandomMeal } from '../../services/theMealAPI';\nimport { fetchRandomDrink } from '../../services/theCockTailAPI';\n\nconst fetchRandomRecipes = async (pathname, setRandomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    const randomRecipe = await fetchRandomMeal();\n    const randomId = randomRecipe.meals[0].idMeal;\n    setRandomRecipe(randomId);\n    console.log('OQE TEM AQUI : ', randomId);\n  } else if (pathname === '/explorar/bebidas') {\n    const randomRecipe = await fetchRandomDrink();\n    const randomId = randomRecipe.drinks[0].idDrink;\n    setRandomRecipe(randomId);\n    console.log('OQE TEM AQUI : ', randomId);\n  }\n};\n\nfunction buttonFoodOrDrink(currentRoute, nextRoute, buttonTitle, testid) {\n  return (\n    <Link to={`/explorar/${currentRoute}/${nextRoute}`}>\n      <button\n        data-testid={`explore-by-${testid}`}\n      >\n        {buttonTitle}\n      </button>\n    </Link>\n  );\n}\n\nconst buttonSuprise = (pathname, currentRoute, randomRecipe) => {\n  if (pathname === '/explorar/comidas') {\n    return (\n      <Link to={`/${currentRoute}/${randomRecipe}`}>\n        <button\n          data-testid={'explore-surprise'}\n        >\n        Me Surpreenda!\n        </button>\n      </Link>\n    );\n  }\n\n  return (\n    <Link to={`/${currentRoute}/${randomRecipe}`}>\n      <button\n        data-testid={'explore-surprise'}\n      >\n      Me Surpreenda!\n      </button>\n    </Link>\n  );\n};\n\nfunction ExplorerDrinkOrFoods({ location: { pathname } }) {\n  const [randomRecipe, setRandomRecipe] = useState('');\n\n  useEffect(() => {\n    fetchRandomRecipes(pathname, setRandomRecipe);\n  }, []);\n\n  if (pathname === '/explorar/comidas') {\n    return (\n      <div>\n        <Header title=\"Explorar Comidas\" searchIcon={false} />\n        <div className=\"explorer-container\">\n          {buttonFoodOrDrink('comidas', 'ingredientes', 'Por Ingredientes', 'ingredient')}\n          {buttonFoodOrDrink('comidas', 'area', 'Por Local de Origem', 'area')}\n          {buttonSuprise(pathname, 'comidas', randomRecipe)}\n        </div>\n        <Footer />\n      </div>\n    );\n  } return (\n    <div>\n      <Header title=\"Explorar Bebidas\" searchIcon={false} />\n      <div className=\"explorer-container\">\n        {buttonFoodOrDrink('bebidas', 'ingredientes', 'Por Ingredientes', 'ingredient')}\n        {buttonSuprise(pathname, 'bebidas', randomRecipe)}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nExplorerDrinkOrFoods.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExplorerDrinkOrFoods;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport { fetchIngredientsList } from '../../services/theMealAPI';\nimport { fetchListDrinksIngredients } from '../../services/theCockTailAPI';\nimport Header from '../../components/Header/index';\n\nconst fetchIngredients = async (pathname, setIngredients, setImgUrl, setNewRoute) => {\n  if (pathname === '/explorar/comidas/ingredientes') {\n    const dataMeals = await fetchIngredientsList();\n    setIngredients(dataMeals.meals);\n    setImgUrl('https://www.themealdb.com/images/ingredients/');\n    const newRoute = '/comidas';\n    setNewRoute(newRoute);\n  } else if (pathname === '/explorar/bebidas/ingredientes') {\n    const dataDrinks = await fetchListDrinksIngredients();\n    setIngredients(dataDrinks.drinks);\n    setImgUrl('https://www.thecocktaildb.com/images/ingredients/');\n    const newRoute = '/bebidas';\n    setNewRoute(newRoute);\n  }\n};\n\nfunction renderCards(ingredients, imgUrl, newRoute) {\n  return (\n    <div className=\"explorer-container\">\n      {ingredients.map((ele, index) => (\n        index < 12 &&\n        <Link to={`${newRoute}`}>\n          <div\n            key={`${ele}`}\n            data-testid={`${index}-ingredient-card`}\n            className=\"card-container\"\n          >\n            <img\n              data-testid={`${index}-card-img`}\n              src={`${imgUrl}${ele.strIngredient || ele.strIngredient1}-Small.png`}\n              alt={`${ele.strIngredient || ele.strIngredient1}`}\n            />\n            <p data-testid={`${index}-card-name`}>\n              {ele.strIngredient || ele.strIngredient1}\n            </p>\n          </div>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction ExplorerByIngredients({ location: { pathname } }) {\n  const [ingredients, setIngredients] = useState('');\n  const [newRoute, setNewRoute] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n\n  useEffect(() => {\n    fetchIngredients(pathname, setIngredients, setImgUrl, setNewRoute);\n  }, []);\n\n  if (!ingredients) return <h1>Loading</h1>;\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" searchIcon={false} />\n      {renderCards(ingredients, imgUrl, newRoute)}\n      <Footer />\n    </div>\n  );\n}\n\nExplorerByIngredients.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ExplorerByIngredients;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Explorer.css';\nimport Footer from '../../components/Footer/Footer';\nimport Header from '../../components/Header/index';\nimport { fetchMealsByCountry, fetchAreasList, fetchAllMeals } from '../../services/theMealAPI';\n\nconst fetchCountryList = async (setCountryList) => {\n  const countryList = await fetchAreasList();\n  setCountryList(countryList.meals.map(({ strArea }) => strArea));\n};\n\nconst fetchMeals = async (setMeals, option) => {\n  if (option === 'All') {\n    const meals = await fetchAllMeals();\n    setMeals(meals.meals);\n    console.log('Meals = ', meals.meals);\n  } else {\n    const meals = await fetchMealsByCountry(`${option}`);\n    setMeals(meals.meals);\n  }\n};\n\nfunction renderCards(meals) {\n  return (\n    meals && meals.map((e, index) => (\n      index < 12 &&\n      <div\n        className=\"card-container\"\n        data-testid={`${index}-recipe-card`}\n        key={`${e}`}\n      >\n        <Link to={`/comidas/${e.idMeal}`}>\n          <img\n            src={`${e.strMealThumb}`}\n            alt={`${e.strMeal}`}\n            data-testid={`${index}-card-img`}\n          />\n          <p\n            data-testid={`${index}-card-name`}\n          >\n            {`${e.strMeal}`}\n          </p>\n        </Link>\n      </div>\n     ))\n  );\n}\n\nfunction ExplorerByArea() {\n  const [countryList, setCountryList] = useState(undefined);\n  const [meals, setMeals] = useState(undefined);\n  const [option, setOption] = useState('All');\n\n  useEffect(() => {\n    fetchCountryList(setCountryList);\n  }, []);\n\n  useEffect(() => {\n    fetchMeals(setMeals, option);\n  }, [option]);\n\n  if (!countryList) return <h1>Loading</h1>;\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" searchIcon />\n      <div className=\"explorer-container\">\n        <select\n          key=\"area\"\n          onChange={(e) => setOption(e.target.value)}\n          data-testid=\"explore-by-area-dropdown\"\n        >\n          <option value=\"All\" data-testid=\"All-option\">All</option>\n          {countryList.map((country) => (\n            <option key={country} value={country} data-testid={`${country}-option`}>{country}</option>\n          ))}\n        </select>\n        {renderCards(meals)}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExplorerByArea;\n","import React from 'react';\n\nconst NotFound = () => <div>Not Found This Page</div>;\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShareButton from '../../components/Share/ShareButton';\nimport './style.css';\n\nimport garfo from './garfo.svg';\nimport beber from './beber.svg';\n\nconst renderThumb = (recipe, index, setRedirect) => {\n  const { img, name } = recipe;\n  return (\n    <React.Fragment>\n      <div data-testid={`${index}-recipe-card`}>\n        <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n          <img\n            className=\"thumbnail\"\n            alt={`imagem de uma refeição: ${name}`}\n            data-testid={`${index}-horizontal-image`}\n            src={img}\n          />\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst renderCardInfo = (recipe, index, setRedirect) => {\n  const { name, type, id } = recipe;\n  console.log(index);\n  return (\n    <React.Fragment>\n      <div className=\"card-title\">\n        <div>\n          <button onClick={() => setRedirect(true)} className=\"buttonCard\">\n            <span data-testid={`${index}-horizontal-name`}>{name}</span>\n          </button>\n        </div>\n        <img\n          className=\"recipe-icon\" src={type[0] === 'c' ? garfo : beber}\n          width=\"20px\" alt=\"icone de talheres\"\n        />\n      </div>\n      <div>\n        <ShareButton index={index} path={`/${type}s/${id}`} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst renderTopInformantion = (recipe, index) => {\n  const { area, category, alcoholic } = recipe;\n  return (\n    <React.Fragment>\n      <span\n        className=\"subtitle-card\"\n        data-testid={`${index}-horizontal-top-text`}\n      >\n        {recipe.type[0] === 'c' ? `${area} - ${category}` : alcoholic}\n      </span>\n    </React.Fragment>\n  );\n};\n\nconst renderDate = (recipe, index) => {\n  const { doneDate } = recipe;\n  return (\n    <React.Fragment>\n      <span\n        data-testid={`${index}-horizontal-done-date`}\n        className=\"subtitle-card\"\n      >\n        Feita em: {doneDate}\n      </span>\n    </React.Fragment>\n  );\n};\n\nconst renderTagName = (recipe, index) => {\n  const { tags = [] } = recipe;\n  return (\n    <React.Fragment>\n      {tags.map((tagName) => (\n        <span\n          key={index}\n          data-testid={`${index}-${tagName}-horizontal-tag`}\n          className=\"subtitle-card\"\n        >\n          {`${tagName}`}\n        </span>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst DoneRecipeCard = ({ recipe, index, doneRecipes }) => {\n  const [redirect, setRedirect] = useState(false);\n  const { id, type } = recipe;\n\n  if (redirect) return <Redirect to={!doneRecipes ? '#' : `/${type}s/${id}`} />;\n  return (\n    <Link className=\"card b-shadow\" to={doneRecipes ? '#' : `/${type}s/${id}`}>\n      {renderThumb(recipe, index, setRedirect)}\n      <div className=\"infoCard\">\n        {renderTopInformantion(recipe, index)}\n        {renderCardInfo(recipe, index, setRedirect)}\n        {renderDate(recipe, index, doneRecipes)}\n        {renderTagName(recipe, index)}\n      </div>\n    </Link>\n  );\n};\n\nDoneRecipeCard.defaultProps = {\n  doneRecipes: undefined,\n};\n\nDoneRecipeCard.propTypes = {\n  recipe: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  doneRecipes: PropTypes.string,\n};\n\nexport default DoneRecipeCard;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesMeals } from '../../services/theMealAPI';\nimport { fetchCategoriesDrinks } from '../../services/theCockTailAPI';\nimport ListCategories from '../../components/Categories/ListCategories';\nimport DoneRecipeCard from '../../components/DoneRecipeCard';\nimport './style.css';\nimport '../../components/Categories/ListCategories.css';\nimport destructureAPI from '../../untils/destructureObject';\n\nconst recipeModal = (recipe) => ({\n  ...recipe,\n  img: recipe.image,\n  alcoholic: recipe.alcoholicOrNot,\n});\n\nconst renderCategories = (setFilteredRecipes, recipes) => {\n  const categories = [{ all: 'todos' }, { food: 'comida' }, { drink: 'bebida' }];\n  const filterRecipes = (value) => {\n    if (value === 'todos') return recipes;\n    return recipes.filter((recipe) => recipe.type.includes(value));\n  };\n  return (\n    <div className=\"categories\">\n      {categories.map((category) => (\n        <button\n          className=\"categoryBtn\"\n          data-testid={`filter-by-${Object.keys(category)}-btn`}\n          onClick={() => setFilteredRecipes(filterRecipes(Object.values(category)[0]))}\n          key={Object.values(category)}\n        >\n          {Object.keys(category)}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst DoneRecipeList = ({ recipes, type }) => {\n  const [categories, setCategories] = useState({ recipes: [] });\n  const [doneRecipes, setDoneRecipes] = useState(false);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  useEffect(() => {\n    if (type === 'doneRecipes') {\n      setDoneRecipes(true);\n    }\n    if (type === 'meal') {\n      fetchCategoriesMeals()\n        .then((resp) => setCategories({ recipes: resp.meals }), (resp) => resp);\n    }\n    if (type === 'drink') {\n      fetchCategoriesDrinks()\n      .then((resp) => setCategories({ recipes: resp.drinks }), (resp) => resp);\n    }\n  }, []);\n  useEffect(() => {\n    setFilteredRecipes(recipes);\n  }, [recipes]);\n  return (\n    <section>\n      {!doneRecipes &&\n        <ListCategories\n          strCategories={[{ strCategory: 'All' }, ...categories.recipes]}\n          type={type}\n        />\n      }\n      {doneRecipes && renderCategories(setFilteredRecipes, recipes)}\n      <div className=\"foodList\">\n        {!doneRecipes && recipes.slice(0, 12).map((recipe, index) => (\n          <DoneRecipeCard\n            key={Object.values(recipe)[0]}\n            recipe={destructureAPI(recipe)}\n            index={index}\n          />\n        ))}\n        {doneRecipes && filteredRecipes.map((recipe, index) => (\n          <DoneRecipeCard\n            doneRecipes=\"disabled-link\"\n            key={Object.values(recipe)[0]}\n            recipe={recipeModal(recipe)}\n            index={index}\n          />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nDoneRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default DoneRecipeList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Header from '../../components/Header';\nimport DoneRecipesList from './DoneRecipesList';\nimport FoodContext from '../../pages/FoodMainPage/Context/FoodContext';\n\nconst DoneRecipes = () => {\n  const [recipes, setRecipes] = useState([]);\n  const { storage } = useContext(FoodContext);\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('doneRecipes')) !== null) {\n      setRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n    }\n  }, [storage]);\n  useEffect(() => {\n    if (!JSON.parse(localStorage.getItem('doneRecipes'))) {\n      localStorage.setItem('doneRecipes', JSON.stringify(recipes));\n    }\n  }, []);\n  // useEffect(() => {\n  //   setRecipes(JSON.parse(localStorage.getItem('doneRecipes')));\n  // }, []);\n\n  return (\n    <div>\n      <Header title=\"Receitas Feitas\" searchIcon={false} />\n      <DoneRecipesList recipes={recipes} type=\"doneRecipes\" />\n    </div>\n  );\n};\n\nexport default DoneRecipes;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from '../pages/Login/Login';\nimport Profile from '../pages/UserProfile/Profile';\nimport DetailsRecipeContent from '../pages/DetailsPage/DetailsRecipePage/DetailsRecipeContent';\nimport RecipesInProgressContent from '../pages/RecipesInProgress/RecipesInProgressPage/RecipesInProgressContent';\nimport Foods from '../pages/FoodMainPage/Foods';\nimport Drinks from '../pages/DrinkMainPage/Drinks';\nimport FavoriteRecipes from '../pages/FavoriteRecipes/FavoriteRecipes';\nimport Explorer from '../pages/ExplorerPages/Explorer';\nimport DrinkOrFoods from '../pages/ExplorerPages/ExplorerDrinkOrFood';\nimport ExplorerByIngredients from '../pages/ExplorerPages/ExplorerByIngredients';\nimport ExplorerByArea from '../pages/ExplorerPages/ExplorerByOrigem';\nimport NotFound from '../pages/ExplorerPages/NotFound';\nimport DoneRecipes from '../pages/DoneRecipes';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/explorar/bebidas/area\" component={NotFound} />\n      <Route path=\"/explorar/comidas/area\" component={ExplorerByArea} />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ExplorerByIngredients} />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ExplorerByIngredients} />\n      <Route path=\"/explorar/comidas\" component={DrinkOrFoods} />\n      <Route path=\"/explorar/bebidas\" component={DrinkOrFoods} />\n      <Route path=\"/explorar\" component={Explorer} />\n      <Route exact path=\"/comidas/:id\" component={DetailsRecipeContent} />\n      <Route exact path=\"/bebidas/:id\" component={DetailsRecipeContent} />\n      <Route exact path=\"/comidas/:id/in-progress\" component={RecipesInProgressContent} />\n      <Route exact path=\"/bebidas/:id/in-progress\" component={RecipesInProgressContent} />\n      <Route exact path=\"/comidas\" component={Foods} />\n      <Route exact path=\"/bebidas\" component={Drinks} />\n      <Route exact path=\"/receitas-favoritas\" component={FavoriteRecipes} />\n      <Route exact path=\"/receitas-feitas\" component={DoneRecipes} />\n      <Route exact path=\"/perfil\" component={Profile} />\n      <Route exact path=\"/\" component={Login} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FoodContext from './FoodContext';\nimport { fetchMeals } from '../../../services/theMealAPI';\nimport { fetchDrinks } from '../../../services/theCockTailAPI';\n\nconst FoodProvider = ({ children }) => {\n  const [dataBase, setDataBase] = useState({ drinks: [], meals: [] });\n  const [mealsData, setMealsData] = useState([]);\n  const [drinksData, setDrinksData] = useState([]);\n  const [storage, setStorage] = useState([]);\n  const handleMealsSuccess = (response) => {\n    const { meals } = response;\n    setMealsData(meals);\n    setDataBase((currentState) => ({ ...currentState, meals }));\n  };\n  const fetch12Meals = () => {\n    fetchMeals()\n      .then(handleMealsSuccess, (e) => e);\n  };\n  const handleDrinksSuccess = (response) => {\n    const { drinks } = response;\n    setDrinksData(drinks);\n    setDataBase((currentState) => ({ ...currentState, drinks }));\n  };\n  const fetch12Drinks = () => {\n    fetchDrinks()\n      .then(handleDrinksSuccess, (e) => e);\n  };\n  const context = {\n    get12Meals: fetch12Meals,\n    get12Drinks: fetch12Drinks,\n    mealsData,\n    drinksData,\n    setMealsData,\n    setDrinksData,\n    storage,\n    setStorage,\n    dataBase,\n  };\n  return (\n    <FoodContext.Provider value={context}>\n      {children}\n    </FoodContext.Provider>\n  );\n};\n\nFoodProvider.propTypes = { children: PropTypes.node.isRequired };\n\nexport default FoodProvider;\n","import React from 'react';\nimport Routes from './Routes/Routes';\nimport { RecipeInProgressProvider } from './pages/RecipesInProgress/RecipeInProgressProvider';\nimport FoodProvider from './pages/FoodMainPage/Context/FoodProvider';\nimport SearchBarProvider from './components/HeaderSearchBar/HeaderSearchBarContext';\n\nfunction App() {\n  return (\n    <div>\n      <RecipeInProgressProvider>\n        <SearchBarProvider>\n          <FoodProvider>\n            <Routes />\n          </FoodProvider>\n        </SearchBarProvider>\n      </RecipeInProgressProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}